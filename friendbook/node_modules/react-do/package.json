{
  "_from": "react-do",
  "_id": "react-do@1.1.6",
  "_inBundle": false,
  "_integrity": "sha512-x9KDI0jFL349jkutdQDDILntqEz5mq4Z48AyE9kwHBPuRjlaI5VJbBCK68YwDeLIkyEgI7OwVargxNkEtiGx2A==",
  "_location": "/react-do",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-do",
    "fetchSpec": "latest",
    "name": "react-do",
    "raw": "react-do",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-do/-/react-do-1.1.6.tgz",
  "_shasum": "de4e896c4c8693bc502fcaf5f607ae9571c30fbd",
  "_shrinkwrap": null,
  "_spec": "react-do",
  "_where": "/home/kamaleeswary/react-webpack/friendsapp",
  "author": {
    "email": "josh@joshwaller.me",
    "name": "Josh Waller",
    "url": "https://github.com/mdxprograms"
  },
  "bin": {
    "react-do": "./index.js"
  },
  "bugs": {
    "url": "https://github.com/mdxprograms/react-do/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "global": "^4.3.2",
    "prettier": "^1.7.4"
  },
  "deprecated": false,
  "description": "A react file generator",
  "devDependencies": {},
  "homepage": "https://github.com/mdxprograms/react-do",
  "keywords": [
    "components",
    "file generator",
    "react",
    "reactjs",
    "scaffolding"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "react-do",
  "optionalDependencies": {},
  "readme": "# { React Do }\n\n## Install\n\n`yarn add react-do --dev`\n\nor\n\n`npm i react-do --save-dev`\n\n## Description\n\nReact Do helps save time by reading `.react-do.json` in your project root and creating\na new file based on the configuration parameters and the `templatesDir` template you provide.\n\n```bash\nyarn react-do component HelloWorld\n```\n\nYou can also specify a nested filepath\n\n```bash\nyarn react-do component People/PersonList\n```\n\nThis will then create this file based off the configuration example below\n\n`./components/People/PersonList.js`\n\n\n## Configuration\n\n.react-do.json configuration example in project root\n\n```json\n{\n  \"templatesDir\": \"./templates\",\n  \"templates\": {\n    \"component\": {\n      \"ext\": \"js\",\n      \"destination\": \"./components/\"\n    },\n    \"container\": {\n      \"ext\": \"js\",\n      \"destination\": \"./components/\"\n    },\n    \"model\": {\n      \"ext\": \"js\",\n      \"destination\": \"./models/\"\n    },\n    \"actions\": {\n      \"ext\": \"js\",\n      \"destination\": \"./actions/\"\n    },\n    \"store\": {\n      \"ext\": \"js\",\n      \"destination\": \"./stores/\"\n    }\n  },\n  \"scaffold\": [\"component\", \"model\", \"actions\", \"store\"]\n}\n```\n\n## Templates\n\nYou can then define a templates directory somewhere in your project that\ncoincides with the `templatesDir`.\n\nThe script works off of the `templates` keys for finding the correct template in `templatesDir`.\n\nIf the `destination` doesn't exist it will create it for you.\n\nBoth `ext` and `destination` are mandatory.\n\nAn example template created in `./example-templates/component.js`\n\n```javascript\nimport React from 'react';\n\nconst YourComponent = () => (\n  <div className=\"\">\n  â€¢ <div>I am render, bringer of fun</div>\n  </div>\n);\n\nexport default YourComponent;\n```\n\nThis will then create a component with your supplied filename via `yarn react-do component YourComponent`\nin `./components/YourComponent.js`\n\n## Scaffold\n\nYou can also setup a scaffolding command by adding the templates you want to get auto generated based off the scaffold name.\n\nexample command using the config above:\n\n```bash\nyarn react-do scaffold People\n```\n\nThis would then create `./components/People.js`, `./models/People.js`, `./actions/People.js`, `./stores/People.js`\n\n## Coming Soon\n\n- [ ] optional `filename` added to templates config will create a default filename to use for that template\n- [ ] destroy command for templates created individually or through scaffold\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/mdxprograms/react-do.git"
  },
  "scripts": {
    "deploy": "git add .; git commit; git push; npm publish",
    "react-do": "node index.js"
  },
  "version": "1.1.6"
}
